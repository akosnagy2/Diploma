%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.14.0.739 (R2012a). Operating System: Microsoft Windows 7.
%%Title: C:\BME\Diploma\Dolgozat\figures\path.eps
%%CreationDate: 11/22/2014  14:54:56
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -422    58  1019   782
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -422    58  1019   782
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -5064 9384 csm

    0     0 17294  8680 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 17295 8681 rf
6 w
0 7555 15447 0 0 -7555 1216 7825 4 MP
PP
-15447 0 0 7555 15447 0 0 -7555 1216 7825 5 MP stroke
4 w
DO
SO
6 w
0 sg
1216 7825 mt 16663 7825 L
1216 7825 mt 1216  270 L
2881 7825 mt 2881 7670 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 300 FMSR

2631 8138 mt 
(825) s
4768 7825 mt 4768 7670 L
4518 8138 mt 
(830) s
6655 7825 mt 6655 7670 L
6405 8138 mt 
(835) s
8543 7825 mt 8543 7670 L
8293 8138 mt 
(840) s
10430 7825 mt 10430 7670 L
10180 8138 mt 
(845) s
12317 7825 mt 12317 7670 L
12067 8138 mt 
(850) s
14204 7825 mt 14204 7670 L
13954 8138 mt 
(855) s
16092 7825 mt 16092 7670 L
15842 8138 mt 
(860) s
1216 7358 mt 1370 7358 L
 848 7469 mt 
(20) s
1216 6550 mt 1370 6550 L
 848 6661 mt 
(30) s
1216 5742 mt 1370 5742 L
 848 5853 mt 
(40) s
1216 4934 mt 1370 4934 L
 848 5045 mt 
(50) s
1216 4127 mt 1370 4127 L
 848 4238 mt 
(60) s
1216 3319 mt 1370 3319 L
 848 3430 mt 
(70) s
1216 2511 mt 1370 2511 L
 848 2622 mt 
(80) s
1216 1703 mt 1370 1703 L
 848 1814 mt 
(90) s
1216  896 mt 1370  896 L
 681 1007 mt 
(100) s
gs 1216 270 15448 7556 rc
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
-1353 -137 -1881 -204 -1849 -216 -1808 -232 -1753 -251 -1674 -274 -1554 -304 -1358 -345 
-1024 -393 -461 -437 292 -445 943 -401 1345 -347 1575 -299 1708 -264 1755 -251 
1753 -250 1754 -250 1754 -250 1754 -250 82 -12 1216 7218 22 MP stroke
gr

24 w
c8
  60   60 1298 7206 PO
  60   60 3052 6956 PO
  60   60 4806 6706 PO
  60   60 6560 6456 PO
  60   60 8313 6206 PO
  60   60 10068 5955 PO
  60   60 11776 5691 PO
  60   60 13351 5392 PO
  60   60 14696 5045 PO
  60   60 15639 4644 PO
  60   60 15931 4199 PO
  60   60 15470 3762 PO
  60   60 14446 3369 PO
  60   60 13088 3024 PO
  60   60 11534 2720 PO
  60   60 9860 2446 PO
  60   60 8107 2195 PO
  60   60 6299 1963 PO
  60   60 4450 1747 PO
  60   60 2569 1543 PO
  60   60 1298 7206 FO
  60   60 3052 6956 FO
  60   60 4806 6706 FO
  60   60 6560 6456 FO
  60   60 8313 6206 FO
  60   60 10068 5955 FO
  60   60 11776 5691 FO
  60   60 13351 5392 FO
  60   60 14696 5045 FO
  60   60 15639 4644 FO
  60   60 15931 4199 FO
  60   60 15470 3762 FO
  60   60 14446 3369 FO
  60   60 13088 3024 FO
  60   60 11534 2720 FO
  60   60 9860 2446 FO
  60   60 8107 2195 FO
  60   60 6299 1963 FO
  60   60 4450 1747 FO
  60   60 2569 1543 FO
gs 1216 270 15448 7556 rc
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
-747 -74 -1347 -141 -1238 -137 -1137 -131 -1041 -127 -951 -122 -869 -117 -792 -112 
-719 -108 -656 -104 -592 -100 -541 -96 -490 -92 -441 -90 -399 -86 -366 -82 
-328 -81 -290 -78 -258 -76 -241 -71 -212 -69 -184 -68 -157 -66 -135 -62 
-113 -60 -107 -57 -92 -56 -77 -55 -63 -54 -50 -54 -37 -52 -26 -51 
-16 -50 -5 -49 4 -49 12 -50 21 -50 30 -50 40 -51 49 -51 
60 -52 70 -51 90 -52 104 -54 119 -57 135 -59 152 -61 171 -63 
193 -65 227 -67 259 -71 293 -75 330 -79 374 -82 424 -85 474 -90 
526 -93 610 -97 698 -107 809 -119 951 -135 1109 -158 1264 -181 1419 -202 
1576 -225 1731 -247 393 -56 1216 7218 68 MP stroke
gr

c9
  60   60 1609 7162 PO
  60   60 3340 6915 PO
  60   60 4916 6690 PO
  60   60 6335 6488 PO
  60   60 7599 6307 PO
  60   60 8708 6149 PO
  60   60 9659 6014 PO
  60   60 10468 5895 PO
  60   60 11166 5788 PO
  60   60 11776 5691 PO
  60   60 12302 5598 PO
  60   60 12776 5508 PO
  60   60 13200 5423 PO
  60   60 13574 5341 PO
  60   60 13904 5262 PO
  60   60 14197 5187 PO
  60   60 14456 5116 PO
  60   60 14683 5049 PO
  60   60 14876 4984 PO
  60   60 15047 4921 PO
  60   60 15199 4860 PO
  60   60 15334 4801 PO
  60   60 15453 4744 PO
  60   60 15557 4690 PO
  60   60 15647 4638 PO
  60   60 15717 4587 PO
  60   60 15777 4535 PO
  60   60 15826 4484 PO
  60   60 15866 4433 PO
  60   60 15896 4383 PO
  60   60 15917 4333 PO
  60   60 15929 4283 PO
  60   60 15933 4234 PO
  60   60 15928 4185 PO
  60   60 15912 4135 PO
  60   60 15886 4084 PO
  60   60 15849 4032 PO
  60   60 15799 3978 PO
  60   60 15736 3924 PO
  60   60 15659 3869 PO
  60   60 15567 3813 PO
  60   60 15460 3756 PO
  60   60 15347 3696 PO
  60   60 15212 3634 PO
  60   60 15055 3568 PO
  60   60 14871 3500 PO
  60   60 14659 3431 PO
  60   60 14418 3360 PO
  60   60 14160 3284 PO
  60   60 13870 3206 PO
  60   60 13542 3125 PO
  60   60 13176 3043 PO
  60   60 12777 2957 PO
  60   60 12336 2867 PO
  60   60 11846 2775 PO
  60   60 11305 2679 PO
  60   60 10713 2579 PO
  60   60 10057 2475 PO
  60   60 9338 2367 PO
  60   60 8546 2255 PO
  60   60 7677 2138 PO
  60   60 6726 2016 PO
  60   60 5685 1889 PO
  60   60 4548 1758 PO
  60   60 3310 1621 PO
  60   60 1963 1480 PO
  60   60 1609 7162 FO
  60   60 3340 6915 FO
  60   60 4916 6690 FO
  60   60 6335 6488 FO
  60   60 7599 6307 FO
  60   60 8708 6149 FO
  60   60 9659 6014 FO
  60   60 10468 5895 FO
  60   60 11166 5788 FO
  60   60 11776 5691 FO
  60   60 12302 5598 FO
  60   60 12776 5508 FO
  60   60 13200 5423 FO
  60   60 13574 5341 FO
  60   60 13904 5262 FO
  60   60 14197 5187 FO
  60   60 14456 5116 FO
  60   60 14683 5049 FO
  60   60 14876 4984 FO
  60   60 15047 4921 FO
  60   60 15199 4860 FO
  60   60 15334 4801 FO
  60   60 15453 4744 FO
  60   60 15557 4690 FO
  60   60 15647 4638 FO
  60   60 15717 4587 FO
  60   60 15777 4535 FO
  60   60 15826 4484 FO
  60   60 15866 4433 FO
  60   60 15896 4383 FO
  60   60 15917 4333 FO
  60   60 15929 4283 FO
  60   60 15933 4234 FO
  60   60 15928 4185 FO
  60   60 15912 4135 FO
  60   60 15886 4084 FO
  60   60 15849 4032 FO
  60   60 15799 3978 FO
  60   60 15736 3924 FO
  60   60 15659 3869 FO
  60   60 15567 3813 FO
  60   60 15460 3756 FO
  60   60 15347 3696 FO
  60   60 15212 3634 FO
  60   60 15055 3568 FO
  60   60 14871 3500 FO
  60   60 14659 3431 FO
  60   60 14418 3360 FO
  60   60 14160 3284 FO
  60   60 13870 3206 FO
  60   60 13542 3125 FO
  60   60 13176 3043 FO
  60   60 12777 2957 FO
  60   60 12336 2867 FO
  60   60 11846 2775 FO
  60   60 11305 2679 FO
  60   60 10713 2579 FO
  60   60 10057 2475 FO
  60   60 9338 2367 FO
  60   60 8546 2255 FO
  60   60 7677 2138 FO
  60   60 6726 2016 FO
  60   60 5685 1889 FO
  60   60 4548 1758 FO
  60   60 3310 1621 FO
  60   60 1963 1480 FO
gs 1216 270 15448 7556 rc
gr

0 sg
8505 8414 mt 
(X[mm]) s
 559 4481 mt  -90 rotate
(Y[mm]) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1199 7868 mt 
( ) s
16647  312 mt 
( ) s
6 w
1 sg
0 750 3854 0 0 -750 12750 1080 4 MP
PP
-3854 0 0 750 3854 0 0 -750 12750 1080 5 MP stroke
4 w
DO
SO
6 w
0 sg
12750  330 mt 16604  330 L
12750 1080 mt 16604 1080 L
16604 1080 mt 16604  330 L
12750 1080 mt 12750  330 L
12750 1080 mt 16604 1080 L
12750 1080 mt 12750  330 L
12750  330 mt 16604  330 L
12750 1080 mt 16604 1080 L
16604 1080 mt 16604  330 L
12750 1080 mt 12750  330 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 300 FMSR

13219  634 mt 
(Geometriai p\341lya) s
gs 12750 330 3855 751 rc
24 w
c8
361 0 12822 527 2 MP stroke
gs 12856 381 293 293 rc
  60   60 13002  527 PO
  60   60 13002  527 FO
gr

gr

24 w
c8
0 sg
13219  989 mt 
(\332jramintav\351telezett p\341lya) s
gs 12750 330 3855 751 rc
c9
361 0 12822 882 2 MP stroke
gs 12856 736 293 293 rc
  60   60 13002  882 PO
  60   60 13002  882 FO
gr

6 w
gr

6 w
c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
